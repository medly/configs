{
    "env": {
        "es6": true,
        "node": true,
        "commonjs": true
    },
    "parserOptions": {
        "ecmaVersion": 12
    },
    "parser": "@typescript-eslint/parser",
    "plugins": ["@typescript-eslint", "promise", "jest", "jest-dom", "jest-formatting", "unused-imports", "prettier"],
    "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:promise/recommended",
        "plugin:prettier/recommended",
        "plugin:jest/recommended",
        "plugin:jest-dom/recommended",
        "plugin:jest-formatting/recommended"
    ],
    "rules": {
        "no-var": "error",
        "no-undef": "error",
        "prefer-const": "error",
        "no-param-reassign": "error",
        "arrow-parens": ["error", "as-needed"],
        "unused-imports/no-unused-imports": "warn",
        "prefer-destructuring": "warn",
        "prefer-template": "warn",
        "object-shorthand": "warn",
        "object-curly-spacing": ["warn", "always"],
        "jest-dom/prefer-empty": "warn",
        "jest-dom/prefer-focus": "warn",
        "jest-dom/prefer-in-document": "warn",
        "jest-dom/prefer-to-have-style": "warn",
        "jest-dom/prefer-to-have-value": "warn",
        "jest-dom/prefer-checked": "warn",
        "jest-dom/prefer-enabled-disabled": "warn",
        "jest-dom/prefer-required": "warn",
        "jest-dom/prefer-to-have-attribute": "warn",
        "jest-formatting/padding-around-describe-blocks": "warn",
        "jest-formatting/padding-around-test-blocks": "warn",
        "jest-formatting/padding-around-after-all-blocks": "warn",
        "jest-formatting/padding-around-after-each-blocks": "warn",
        "jest-formatting/padding-around-before-all-blocks": "warn",
        "jest-formatting/padding-around-before-each-blocks": "warn",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-var-requires": "warn",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-empty-interface": [
            "error",
            {
                "allowSingleExtends": true
            }
        ]
    }
}
